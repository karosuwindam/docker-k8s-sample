# apiVersion: apps/v1
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: gf-space
  name: prometheus-configmap
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s # By default, scrape targets every 15 seconds.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # Attach these labels to any time series or alerts when communicating with
      # external systems (federation, remote storage, Alertmanager).
    #external_labels:
    #  monitor: 'codelab-monitor'
      
    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'
      
      # Override the global default and scrape targets from this job every 5 seconds.
        scrape_interval: 5s
      
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'NAS'
        scrape_interval: 5s
        static_configs:
          - targets:
            - 192.168.0.6:49154
        relabel_configs:
        - source_labels: ["NAS32582A"]
          replacement: NAS32582A
          target_label: node_name
      # - job_name: 'cadvisor'
      #   static_configs:
      #     - targets:
      #       - 192.168.0.25:8081
      #       - 192.168.0.21:8081
      #       - 192.168.0.24:8081
      # - job_name: 'node'
      #   static_configs:
      #     - targets:
      #       - 192.168.0.25:9100
      #       - 192.168.0.21:9100
      #       - 192.168.0.24:9100
      # - job_name: 'senser'
      #   static_configs:
      #     - targets:
      #       - 192.168.0.25:9140
      #       - 192.168.0.21:9140
      #       - 192.168.0.24:9140
      # - job_name: 'k8s-pod'
      #   kubernetes_sd_configs:
      #     - role: pod
      #   relabel_configs:
      #     - source_labels: [__meta_kubernetes_pod_container_port_name]
      #       regex: metrics
      #       action: keep
      #     - source_labels: [__meta_kubernetes_pod_container_name]
      #       target_label: job
      #
      # - job_name: 'kubelet'
      #   kubernetes_sd_configs:
      #   - role: node
      #   scheme: https
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #     insecure_skip_verify: true  # Required with Minikube.
      #
      # - job_name: 'kubernetes-nodes'
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   kubernetes_sd_configs:
      #     - role: node
      # - job_name: 'kubernetes-services'
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   kubernetes_sd_configs:
      #     - role: services
      # - job_name: 'kubernetes-endpoints'
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   kubernetes_sd_configs:
      #     - role: endpoints
      - job_name: 'kube-state-metrics'
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_name]
            regex: kube-state-metrics
            action: keep
      - job_name: 'kubernetes-pods'
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_name]
            regex: cadvisor|exporter|dockeri2cmoni|speaker
            action: keep
          # - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          #   action: keep
          #   regex: true
          # - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          #   action: replace
          #   target_label: __metrics_path__
          #   regex: (.+)
          # - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          #   action: replace
          #   regex: (.+):(?:\d+);(\d+)
          #   replacement: ${1}:${2}
          #   target_label: __address__
          # - action: labelmap
          #   regex: __meta_kubernetes_pod_label_(.+)
          # - source_labels: [__meta_kubernetes_namespace]
          #   action: replace
          #   target_label: kubernetes_namespace
          # - source_labels: [__meta_kubernetes_pod_name]
          #   action: replace
          #   target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node_name
      - job_name: 'kubernetes-cadvisor'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    #remote_write:
    #  - url: "http://192.168.0.21:8086/api/v1/prom/write?db=prometheus"
    #    queue_config:
    #      max_shards: 600
    #      max_samples_per_send: 300
    #      batch_send_deadline: 30s
      
    #remote_read:
    #  - url: "http://192.168.0.21:8086/api/v1/prom/read?db=prometheus"
    #remote_write:
    #  - url: "http://192.168.0.6:8086/api/v1/prom/write?db=testdata"
      #- url: "http://192.168.0.6:8086/api/v1/prom/write?db=test&u=karosu&p=windam1314"
        #queue_config:
        #  max_shards: 500
        #  max_samples_per_send: 10000
        #  batch_send_deadline: 15s
      #- url: "http://35.184.47.193:8086/api/v2/write?org=windam&bucket=prometheus&precision=ns"
      #  bearer_token: Sr--IgqbKT357R3mDaFzQNMLjCpdg1oEuxiKdKVMjXzFIfKLVIxhINjrywZSaplavMH7bzQ_3gZI_XBKOX1lJA==
      # - url: "http://34.67.208.161:8086/api/v1/prom/write?db=prometheus&u=karosuwindam&p=1qaz2wsx3edc"
      #   queue_config:
      #     max_shards: 500
      #     max_samples_per_send: 90000
      #     batch_send_deadline: 30s
      
    #remote_read:
    # - url: "http://192.168.0.6:8086/api/v1/prom/read?db=testdata"
    #  - url: "http://192.168.0.6:8086/api/v1/prom/read?db=test&u=karosu&p=windam1314"

