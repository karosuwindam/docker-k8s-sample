apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: test
spec:
  ports:
  - port: 3306
  # deploymentが管理するpodを定義
  # labelsにapp=mysqlと設定されたpodを管理する
    nodePort: 30100
  type: LoadBalancer
  selector:
    app: mysql 
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
  namespace: test
spec:
  selector:
    matchLabels:
      app: mysql
  # podをアップデートする時の動作を定義
  # Recreateのときはpodは一つしか存在できず、更新すると
  # 古いものが消え新しいものが再度作成される
  strategy:
    type: Recreate
  template: # podの定義
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: hypriot/rpi-mysql
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password # 本番ではsecretを使ってねとある
        - name: MYSQL_DATABASE
          value: test_database
        - name: MYSQL_USER
          value: mysql
        - name: MYSQL_PASSWORD
          value: mysql
        - name: TZ
          value: 'Asia/Tokyo'
        args:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts: # コンテナ内のどのディレクトリにpersistentVolumeをマウントするか
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes: #
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
          # name=mysql-pv-claimを使って、マウントできるPVを探す