apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: gf-space
spec:
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3100'
        prometheus.io/path: /metrics
        podinfo: "logを収集する Grafana Loki"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - "k8s-worker-1"
      containers:
        - name: loki
          image: grafana/loki:3.2.1
          # image: grafana/loki:2.7.4
          imagePullPolicy: IfNotPresent
          args:
          - --config.file=/etc/loki/local-config.yaml       #   command: ["-config.file=/etc/loki/local-config.yaml"]
          ports:
            - containerPort: 3100
          resources:
            limits:
              cpu: 300m
              memory: 0.75Gi
            requests:
              cpu: 100m
              memory: 0.5Gi
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/local-config.yaml
              subPath: local-config.yaml
            - name: grafana-vol
              mountPath: /loki
      volumes:
        - name: grafana-vol
          persistentVolumeClaim:
            claimName: loki-pvc
        - name: loki-config
          configMap:
            name: loki-configmap
            items:
              - key: local-config.yaml
                path: local-config.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: gf-space
spec:
  selector:
    app: loki
  ports:
    - port: 3100
  clusterIP: None