# FROM multiarch/ubuntu-core:armhf-bionic As builder
FROM ubuntu:22.04 As builder
# RUN apt update && apt upgrade -y
# RUN apt-key adv --keyserver ports.ubuntu.com --recv-keys 871920D1991BC93C
# RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y curl gcc git locales locales-all &&\
    locale-gen ja_JP.UTF-8
RUN curl -OL https://dl.google.com/go/goGO_VERSION.linux-armv6l.tar.gz &&\
    tar -C /usr/local -xzf goGO_VERSION.linux-armv6l.tar.gz &&\
    rm -rf goGO_VERSION.linux-armv6l.tar.gz
ENV PATH $PATH:/usr/local/go/bin
# RUN go get -u github.com/seihmd/openbd &&\
#     go get -u github.com/PuerkitoBio/goquery &&\
#     go get -u github.com/go-sql-driver/mysql &&\
#     go get -u github.com/mattn/go-sqlite3
WORKDIR /app
ADD ./golang .
RUN go build -o app
# FROM multiarch/ubuntu-core:armhf-bionic
FROM ubuntu:22.04
LABEL maintainer "karosu <karosuwindam@gmail.com>"
LABEL version="TAG"
LABEL docker_arch="ARCH"
LABEL go_version="GO_VERSION"
LABEL name="booknewread"

RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y locales locales-all curl && \
#    locale-gen ja_JP.UTF-8 &&\
    apt-get clean &&\
    rm -rf /var/lib/apt/lists/*
WORKDIR /app
COPY ./golang-v2/bookmarks.html ./
COPY ./golang-v2/html html
COPY ./golang-v2/bookmark bookmark
COPY ./golang-v2/run.sh ./
COPY --from=builder /app/app /app
RUN chmod +x run.sh
# COPY ./app /app
CMD ["./run.sh"]
