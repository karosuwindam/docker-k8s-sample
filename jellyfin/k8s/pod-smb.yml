apiVersion: v1
kind: PersistentVolume
metadata:
  name: "jellyfin-meta-pv-volume"
  namespace: jellyfin
  labels:
    type: "local"
spec:
  storageClassName: "jellyfin-meta"
  capacity:
    storage: "20Gi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/pi/usb/usb1/jellyfin-metadata
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-meta-pv-claim
  namespace: jellyfin
spec:
  storageClassName: jellyfin-meta
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "jellyfin-transcodes-pv-volume"
  namespace: jellyfin
  labels:
    type: "local"
spec:
  storageClassName: "jellyfin-transcodes"
  capacity:
    storage: "20Gi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/pi/usb/usb1/jellyfin-transcodes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-transcodes-pv-claim
  namespace: jellyfin
spec:
  storageClassName: jellyfin-transcodes
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "jellyfin-cache-pv-volume"
  namespace: jellyfin
  labels:
    type: "local"
spec:
  storageClassName: "jellyfin-cache"
  capacity:
    storage: "20Gi"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/pi/usb/usb1/jellyfin-cache
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache-pv-claim
  namespace: jellyfin
spec:
  storageClassName: jellyfin-cache
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      annotations:
        podinfo: "jellyfin:マルチメディアの総合管理"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - arm64
      containers:
        - name: jellyfin
          image: lscr.io/linuxserver/jellyfin:10.8.13
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: jellyfin-env
          ports:
            - containerPort: 8096
          volumeMounts:
            - name: config
              mountPath: /config
            - name: jellyfin-meta
              mountPath: /config/data/metadata
            - name: movies
              mountPath: /data/movies
              readOnly: true
            # - name: other
            #   mountPath: /data/other
            #   readOnly: true
            - name: music
              mountPath: /data/music
              readOnly: true
            - name: nextcloud
              mountPath: /data/nextcloud
              readOnly: true
            - name: jellyfin-transcodes
              mountPath: /config/data/transcodes
            - name: jellyfin-cache
              mountPath: /config/cache
          resources:
            limits:
              cpu: 2.5
              memory: 5.5Gi
            requests:
              cpu: 1
              memory: 2.5Gi
          securityContext:
            privileged: true
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-pvc-config 
        - name: movies
          persistentVolumeClaim:
            claimName: jellyfin-pvc-movies 
        - name: music
          persistentVolumeClaim:
            claimName: jellyfin-pvc-smb-music 
        # - name: other
        #   persistentVolumeClaim:
        #     claimName: jellyfin-pvc-smb-other 
        - name: nextcloud
          persistentVolumeClaim:
            claimName: jellyfin-pvc-smb-pi 
        - name: jellyfin-meta
          persistentVolumeClaim:
            claimName: jellyfin-meta-pv-claim
        - name: jellyfin-transcodes
          persistentVolumeClaim:
            claimName: jellyfin-transcodes-pv-claim
        - name: jellyfin-cache
          persistentVolumeClaim:
            claimName: jellyfin-cache-pv-claim
---
